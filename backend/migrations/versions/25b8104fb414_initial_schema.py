"""initial_schema

Revision ID: 25b8104fb414
Revises: 
Create Date: 2025-04-13 17:17:41.257894

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '25b8104fb414'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('entity',
    sa.Column('entity_id', sa.Integer(), nullable=True),
    sa.Column('entity_name', sa.String(), nullable=False),
    sa.Column('swift', sa.String(), nullable=True),
    sa.Column('entity_address', sa.String(), nullable=True),
    sa.Column('country', sa.String(), nullable=True),
    sa.Column('signing_office_branch', sa.String(), nullable=True),
    sa.Column('agreement_date', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('entity_name')
    )
    op.create_table('transaction',
    sa.Column('transaction_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('country', sa.String(), nullable=True),
    sa.Column('issuing_bank', sa.String(), nullable=True),
    sa.Column('confirming_bank', sa.String(), nullable=True),
    sa.Column('requesting_bank', sa.String(), nullable=True),
    sa.Column('adb_guarantee_trn', sa.String(), nullable=True),
    sa.Column('confirming_bank_reference_trn', sa.String(), nullable=True),
    sa.Column('issuing_bank_reference_trn', sa.String(), nullable=True),
    sa.Column('form_of_eligible_instrument', sa.String(), nullable=True),
    sa.Column('face_amount', sa.Float(), nullable=True),
    sa.Column('date_of_issue', sa.DateTime(), nullable=True),
    sa.Column('expiry_date', sa.DateTime(), nullable=True),
    sa.Column('terms_of_payment', sa.String(), nullable=True),
    sa.Column('currency', sa.String(), nullable=True),
    sa.Column('local_currency_amount', sa.Float(), nullable=True),
    sa.Column('usd_equivalent_amount', sa.Float(), nullable=True),
    sa.Column('book_rate', sa.Float(), nullable=True),
    sa.Column('cover', sa.Float(), nullable=True),
    sa.Column('local_currency_amount_cover', sa.Float(), nullable=True),
    sa.Column('usd_equivalent_amount_cover', sa.Float(), nullable=True),
    sa.Column('sub_limit_type', sa.String(), nullable=True),
    sa.Column('value_date_of_adb_guarantee', sa.DateTime(), nullable=True),
    sa.Column('end_of_risk_period', sa.DateTime(), nullable=True),
    sa.Column('tenor', sa.String(), nullable=True),
    sa.Column('expiry_date_of_adb_guarantee', sa.DateTime(), nullable=True),
    sa.Column('tenor_of_adb_guarantee', sa.String(), nullable=True),
    sa.Column('guarantee_fee_rate', sa.Float(), nullable=True),
    sa.Column('industry', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['confirming_bank'], ['entity.entity_name'], ),
    sa.ForeignKeyConstraint(['issuing_bank'], ['entity.entity_name'], ),
    sa.ForeignKeyConstraint(['requesting_bank'], ['entity.entity_name'], ),
    sa.PrimaryKeyConstraint('transaction_id')
    )
    op.create_table('event',
    sa.Column('event_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('transaction_id', sa.Integer(), nullable=True),
    sa.Column('source', sa.String(), nullable=True),
    sa.Column('email_from', sa.String(), nullable=True),
    sa.Column('email_to', sa.String(), nullable=True),
    sa.Column('email_subject', sa.String(), nullable=True),
    sa.Column('email_body', sa.String(), nullable=True),
    sa.Column('email_date', sa.DateTime(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('sanction_check_status', sa.String(), nullable=True),
    sa.Column('eligibility_check_status', sa.String(), nullable=True),
    sa.Column('limit_check_status', sa.String(), nullable=True),
    sa.Column('pricing_status', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['transaction_id'], ['transaction.transaction_id'], ),
    sa.PrimaryKeyConstraint('event_id')
    )
    op.create_table('transaction_entity',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('transaction_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('country', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['transaction_id'], ['transaction.transaction_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transaction_goods',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('transaction_id', sa.Integer(), nullable=True),
    sa.Column('goods_classification', sa.String(), nullable=True),
    sa.Column('item_name', sa.String(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('unit', sa.String(), nullable=True),
    sa.Column('price', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['transaction_id'], ['transaction.transaction_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('underlying_transaction',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('transaction_id', sa.Integer(), nullable=True),
    sa.Column('issuing_bank', sa.String(), nullable=True),
    sa.Column('sequence_no', sa.Integer(), nullable=True),
    sa.Column('transaction_ref_no', sa.String(), nullable=True),
    sa.Column('issue_date', sa.DateTime(), nullable=True),
    sa.Column('maturity_date', sa.DateTime(), nullable=True),
    sa.Column('currency', sa.String(), nullable=True),
    sa.Column('amount_in_local_currency', sa.String(), nullable=True),
    sa.Column('applicant_name', sa.String(), nullable=True),
    sa.Column('applicant_address', sa.String(), nullable=True),
    sa.Column('applicant_country', sa.String(), nullable=True),
    sa.Column('beneficiary_name', sa.String(), nullable=True),
    sa.Column('beneficiary_address', sa.String(), nullable=True),
    sa.Column('beneficiary_country', sa.String(), nullable=True),
    sa.Column('loading_port', sa.String(), nullable=True),
    sa.Column('discharging_port', sa.String(), nullable=True),
    sa.Column('country_of_origin', sa.String(), nullable=True),
    sa.Column('country_of_final_destination', sa.String(), nullable=True),
    sa.Column('goods', sa.String(), nullable=True),
    sa.Column('goods_classification', sa.String(), nullable=True),
    sa.Column('goods_eligible', sa.String(), nullable=True),
    sa.Column('es_classification', sa.String(), nullable=True),
    sa.Column('capital_goods', sa.Boolean(), nullable=True),
    sa.Column('ee_replacement_of_an_old_equipment', sa.Boolean(), nullable=True),
    sa.Column('sustainable_goods', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['transaction_id'], ['transaction.transaction_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('underlying_transaction')
    op.drop_table('transaction_goods')
    op.drop_table('transaction_entity')
    op.drop_table('event')
    op.drop_table('transaction')
    op.drop_table('entity')
    # ### end Alembic commands ### 